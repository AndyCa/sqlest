/*
 * Copyright 2014 JHC Systems Limited
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package sqlest.extractor

trait ChoiceExtractorSyntax[Row, A] { self: Extractor[Row, A] =>
[2..22#  def cond[[#B1 <: B#], B]([#choice1: (A => Boolean, Extractor[Row, B1])#]) = {
    CondExtractor1(self, [#choice1#])
  }#

]

[2..22#  def switch[[#B1 <: B#], B]([#choice1: (A, Extractor[Row, B1])#]) = {
    SwitchExtractor1(self, [#choice1#])
  }#

]

  def choose[B <: D, C <: D, D](pred: A => Boolean)(l: Extractor[Row, B], r: Extractor[Row, C]) =
    CondExtractor2(self, (pred, l), ((a: A) => true, r))
}
